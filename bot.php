<?php
include "lib.php";

// Get POST body content
$content = file_get_contents('php://input');
// Parse JSON
$events = json_decode($content, true);
// Validate parsed JSON data
if (!is_null($events['events'])) {
	// Loop through each event
	foreach ($events['events'] as $event) {
		// Reply only when message sent is in 'text' format
		if ($event['type'] == 'message' && $event['message']['type'] == 'text') {
			$bx_price_url = "https://bx.in.th/api/";
			$bx_price = callService($bx_price_url,1);
			// Get text sent
			$text = $event['message']['text'];
			// Get replyToken
			$replyToken = $event['replyToken'];

			// Build message to reply back
			$messages = [
				'type' => 'text',
				'text' => $text
			];

			$match_count = 0;
			if($text=="Group ID"){
				$messages = [
					'type' => 'text',
					'text' => $event['source']['groupId']
				];	
				$match_count = $match_count+1;
			}
			

			if($text=="‡∏à‡∏≤‡∏ß‡∏¥‡∏™ ‡∏Ç‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤ ETH" || $text=="‡∏à‡∏≤‡∏ß‡∏¥‡∏™ ‡∏Ç‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤ eth" || $text=="‡∏à‡∏≤‡∏ß‡∏¥‡∏™ ‡∏£‡∏≤‡∏Ñ‡∏≤ ETH" || $text=="‡∏à‡∏≤‡∏ß‡∏¥‡∏™ ‡∏£‡∏≤‡∏Ñ‡∏≤ eth"){
				$messages = [
					'type' => 'text',
					'text' => 'ETH ‡∏£‡∏≤‡∏Ñ‡∏≤ '.number_format($bx_price->{21}->last_price,2).' ‡∏ö‡∏≤‡∏ó ‡πÄ‡∏î‡πâ‡∏≠‡∏•‡∏π‡∏Å‡∏û‡∏µ‡πà'
				];	
				$match_count = $match_count+1;
			}
			if($text=="‡∏à‡∏≤‡∏ß‡∏¥‡∏™ ‡∏Ç‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤ BTC" || $text=="‡∏à‡∏≤‡∏ß‡∏¥‡∏™ ‡∏Ç‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤ btc" || $text=="‡∏à‡∏≤‡∏ß‡∏¥‡∏™ ‡∏£‡∏≤‡∏Ñ‡∏≤ BTC" || $text=="‡∏à‡∏≤‡∏ß‡∏¥‡∏™ ‡∏£‡∏≤‡∏Ñ‡∏≤ btc"){
				$messages = [
					'type' => 'text',
					'text' => 'BTC ‡∏£‡∏≤‡∏Ñ‡∏≤ '.number_format($bx_price->{1}->last_price,2).' ‡∏ö‡∏≤‡∏ó ‡πÄ‡∏î‡πâ‡∏≠‡∏•‡∏π‡∏Å‡∏û‡∏µ‡πà'
				];	
				$match_count = $match_count+1;
			}
			if($text=="‡∏à‡∏≤‡∏ß‡∏¥‡∏™ ‡∏Ç‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤ ZEC" || $text=="‡∏à‡∏≤‡∏ß‡∏¥‡∏™ ‡∏Ç‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤ zec" || $text=="‡∏à‡∏≤‡∏ß‡∏¥‡∏™ ‡∏£‡∏≤‡∏Ñ‡∏≤ ZEC" || $text=="‡∏à‡∏≤‡∏ß‡∏¥‡∏™ ‡∏£‡∏≤‡∏Ñ‡∏≤ zec"){
				$zec =callService('https://api.coinmarketcap.com/v1/ticker/zcash/?convert=THB',1);
				$messages = [
					'type' => 'text',
					'text' => 'ZEC ‡∏£‡∏≤‡∏Ñ‡∏≤ '.number_format($zec[0]->price_thb,2).' ‡∏ö‡∏≤‡∏ó ‡πÄ‡∏î‡πâ‡∏≠‡∏•‡∏π‡∏Å‡∏û‡∏µ‡πà'
				];	
				$match_count = $match_count+1;
			}
			if($text=="‡∏à‡∏≤‡∏ß‡∏¥‡∏™ ‡∏Ç‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤ ETC" || $text=="‡∏à‡∏≤‡∏ß‡∏¥‡∏™ ‡∏Ç‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤ etc" || $text=="‡∏à‡∏≤‡∏ß‡∏¥‡∏™ ‡∏£‡∏≤‡∏Ñ‡∏≤ ETC" || $text=="‡∏à‡∏≤‡∏ß‡∏¥‡∏™ ‡∏£‡∏≤‡∏Ñ‡∏≤ etc"){
				$etc =callService('https://api.coinmarketcap.com/v1/ticker/ethereum-classic/?convert=THB',1);
				$messages = [
					'type' => 'text',
					'text' => 'ETC ‡∏£‡∏≤‡∏Ñ‡∏≤ '.number_format($etc[0]->price_thb,2).' ‡∏ö‡∏≤‡∏ó ‡πÄ‡∏î‡πâ‡∏≠‡∏•‡∏π‡∏Å‡∏û‡∏µ‡πà'
				];	
				$match_count = $match_count+1;
			}
			if($text=="‡πÑ‡∏ú‡πà"){
				$msg = array('‡∏Ñ‡∏ô‡∏ô‡∏µ‡πâ‡∏´‡∏•‡πà‡∏≠‡∏Ç‡∏±‡πâ‡∏ô‡πÄ‡∏ó‡∏û','‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ß‡πà‡∏≤‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏ú‡πà‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö','‡∏´‡∏•‡πà‡∏≠‡∏™‡∏±‡∏™‡πÜ ‡∏´‡∏•‡πà‡∏≠‡πÄ‡∏´‡∏µ‡πâ‡∏¢‡πÜ ‡∏´‡∏•‡πà‡∏≠‡∏Å‡∏ß‡πà‡∏≤‡∏ô‡∏µ‡πâ‡∏Å‡πá‡πÇ‡∏î‡∏° ‡∏õ‡∏Å‡∏£ ‡∏•‡∏±‡∏° ‡∏•‡∏∞‡∏Æ‡∏∞');
				$k = array_rand($msg);
				$v = $msg[$k];
				$messages = [
					'type' => 'text',
					'text' => $v
				];	
				$match_count = $match_count+1;
			}
			if($text=="‡∏à‡∏≤‡∏ß‡∏¥‡∏™‡∏Ç‡∏≠‡∏£‡∏π‡∏õ‡πÑ‡∏ú‡πà"){
				
				$messages = [
					'type' => 'image',
					'originalContentUrl' => 'https://scontent.fbkk13-1.fna.fbcdn.net/v/t1.0-0/s600x600/13709843_1173023019434822_5044201604897757811_n.jpg?oh=26b06ff06a7896179e39f4abdbd86a31&oe=5A32C63D',
					'previewImageUrl' => 'https://scontent.fbkk13-1.fna.fbcdn.net/v/t1.0-0/s600x600/13709843_1173023019434822_5044201604897757811_n.jpg?oh=26b06ff06a7896179e39f4abdbd86a31&oe=5A32C63D',
				];	
				$match_count = $match_count+1;
			}

			if(preg_match('/‡∏à‡∏≤‡∏ß‡∏¥‡∏™/',$text) && preg_match('/‡∏°‡∏∏‡∏Ç/',$text)){
				$msg = array('‡∏Ç‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏´‡∏•‡πà‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡∏ö‡∏≠‡∏Å‡πÄ‡∏•‡πà‡∏≤ ‡πÅ‡∏ï‡πà‡∏Ç‡πâ‡∏≤‡∏£‡∏±‡∏Å‡πÄ‡∏à‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡∏ö‡∏≠‡∏Å‡∏£‡πä‡∏≤‡∏Å‡∏Å‡∏Å','‡∏ñ‡∏∂‡∏á‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏î‡∏π‡πÑ‡∏°‡πà‡πÄ‡∏ú‡πá‡∏î‡πÅ‡∏ï‡πà‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏à‡∏±‡∏î‡∏ß‡πà‡∏≤‡πÄ‡∏î‡πá‡∏î‡∏ö‡∏≠‡∏Å‡πÄ‡∏•‡∏¢','‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏á‡∏¥‡∏ô‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤ ‡∏Å‡πá‡πÉ‡∏à‡πÄ‡∏£‡∏≤‡∏ô‡∏µ‡πà‡πÅ‡∏´‡∏•‡∏∞','‡∏ñ‡∏π‡∏Å‡∏´‡∏ß‡∏¢‡∏¢‡∏±‡∏á‡∏û‡∏≠‡∏°‡∏µ‡∏´‡∏ß‡∏±‡∏á ‡πÅ‡∏ï‡πà‡∏ñ‡πâ‡∏≤‡∏ñ‡∏π‡∏Å‡πÉ‡∏à‡πÄ‡∏ò‡∏≠‡∏à‡∏±‡∏á‡∏à‡∏∞‡∏û‡∏≠‡∏°‡∏µ‡∏´‡∏ß‡∏±‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡∏•‡πà‡∏≤','‡∏´‡πá‡∏ô‡∏Å‡∏π‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏≤‡∏á‡∏ú‡πà‡∏≤‡∏ô ‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡∏Å‡∏π‡∏à‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏î‡πà‡∏≤‡∏ô‡πÄ‡∏Å‡πá‡∏ö‡∏†‡∏≤‡∏©‡∏µ','‡∏û‡∏µ‡πà‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡∏ô‡πà‡∏≤‡πÄ‡∏Ñ‡∏≤‡∏£‡∏û ‡πÅ‡∏ï‡πà‡∏û‡∏µ‡πà‡∏Å‡πá‡∏ô‡πà‡∏≤‡∏Ñ‡∏ö‡∏ô‡∏∞‡∏ô‡πâ‡∏≠‡∏á','‡∏´‡∏ç‡∏¥‡∏á‡πÉ‡∏î‡πÑ‡∏°‡πà‡∏´‡∏∑‡πà‡∏ô ‡∏´‡∏ç‡∏¥‡∏á‡∏ô‡∏±‡πâ‡∏ô‡∏ù‡∏∑‡∏ô‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥','‡πÄ‡∏•‡∏¥‡∏Å‡∏ï‡∏µ‡πÄ‡∏ñ‡∏≠‡∏∞‡∏õ‡πâ‡∏≠‡∏° ‡∏Ç‡∏∂‡πâ‡∏ô‡∏Ñ‡πà‡∏≠‡∏°‡πÄ‡∏£‡∏≤‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤','‡∏Ç‡∏ô‡∏°‡∏õ‡∏±‡∏á‡∏≠‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏≤‡∏°‡πÄ‡∏Æ‡∏≤ ‡πÅ‡∏ï‡πà‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏ô‡∏°‡πÄ‡∏£‡∏≤‡∏≠‡∏∞‡πÄ‡∏Ñ‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏≤‡∏°‡∏£‡∏±‡∏Å‡∏Å‡∏Å','‡∏Ç‡∏±‡∏ö‡∏£‡∏ñ‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏π‡πâ‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡πå ‡∏≠‡∏¢‡∏≤‡∏Å‡πÑ‡∏î‡πâ‡πÄ‡∏°‡∏µ‡∏¢‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏π‡πâ‡πÉ‡∏à','‡∏ñ‡πâ‡∏≤‡πÇ‡∏î‡∏ô‡∏ù‡∏ô‡∏Å‡πá‡∏Ñ‡∏á‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏Ç‡πâ ‡πÅ‡∏ï‡πà‡∏ñ‡πâ‡∏≤‡πÇ‡∏î‡∏ô‡πÉ‡∏à‡∏Å‡πá‡∏Ñ‡∏á‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ò‡∏≠‡∏≠‡∏≠üíãüíãüôÉüôÉ');
				$k = array_rand($msg);
				$v = $msg[$k];
				$messages = [
					'type' => 'text',
					'text' => $v
				];	
				$match_count = $match_count+1;
			}

			if(preg_match('/‡∏à‡∏≤‡∏ß‡∏¥‡∏™/',$text) && preg_match('/‡∏Å‡∏¥‡πä‡∏Å/',$text)){
				$msg = array('‡∏°‡∏µ‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏±‡∏Å‡∏´‡∏≥‡∏ö‡πà‡πÄ‡∏Ñ‡∏¢‡πÅ‡∏´‡πâ‡∏á‡∏´‡∏°‡∏≠‡∏´‡∏ô‡∏¥ 555','‡∏°‡∏µ‡∏´‡∏•‡∏≤‡∏¢‡∏à‡∏ô‡∏õ‡∏±‡πâ‡∏ô‡∏´‡∏≥‡∏ï‡∏≤‡∏Å‡∏ö‡πà‡∏ó‡∏±‡∏ô‡∏ú‡∏∏‡πà‡∏ô‡πÅ‡∏´‡∏•‡πà‡∏ß');
				$k = array_rand($msg);
				$v = $msg[$k];
				$messages = [
					'type' => 'text',
					'text' => $v
				];	
				$match_count = $match_count+1;
			}

			if(preg_match('/‡∏à‡∏≤‡∏ß‡∏¥‡∏™/',$text) && preg_match('/‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏á/',$text)){
				$msg = array('‡∏´‡∏ô‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏Ñ‡∏° ‡∏ô‡∏°‡πÑ‡∏°‡πà‡∏°‡∏µ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡∏î‡∏µ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏´‡∏µ‡πâ‡∏¢‡∏≠‡∏∞‡πÑ‡∏£‡πÄ‡∏•‡∏¢','‡∏≠‡∏¢‡πà‡∏≤‡πÅ‡∏£‡∏î‡πÉ‡∏´‡πâ‡∏°‡∏≤‡∏Å‡∏ô‡∏∞‡∏ô‡πâ‡∏≠‡∏á ‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡∏à‡∏∞‡∏ó‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏û‡πà‡∏≠');
				$k = array_rand($msg);
				$v = $msg[$k];
				$messages = [
					'type' => 'text',
					'text' => $v
				];	
				$match_count = $match_count+1;
			}

			if(preg_match('/‡∏à‡∏≤‡∏ß‡∏¥‡∏™/',$text) && preg_match('/‡∏´‡∏•‡πà‡∏≠‡πÑ‡∏´‡∏°/',$text)){
				$msg = array('‡πÇ‡∏≠‡πâ‡∏¢‡∏´‡∏ô‡πâ‡∏≤‡∏¢‡∏±‡∏á‡∏Å‡∏∞‡∏Æ‡∏ß‡∏Å‡∏Å‡∏ö‡πÅ‡∏´‡∏°','‡πÇ‡∏≠‡∏¢‡∏´‡∏ô‡πâ‡∏≤‡∏Ñ‡∏∑‡∏≠‡∏à‡∏±‡∏á‡∏Ñ‡∏ô‡∏õ‡∏ß‡∏î‡∏Ç‡∏µ‡πâ‡∏ô‡∏¥‡πÅ‡∏°‡∏∞','‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏ú‡∏°‡∏ö‡πà‡∏ï‡∏¥‡∏î‡∏´‡∏£‡∏≠‡∏Å‡∏Ñ‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏û‡∏µ‡πà','‡∏Ç‡∏µ‡πâ‡∏£‡πâ‡∏≤‡∏¢‡πÜ‡∏≠‡∏¢‡πà‡∏≤‡∏°‡∏≤‡∏ñ‡∏≤‡∏°','‡πÄ‡∏Æ‡πá‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏Ñ‡∏∑‡∏≠‡∏Ç‡∏µ‡πâ‡∏Ñ‡∏≤‡∏î‡∏≤‡∏Å‡∏´‡∏ô‡∏¥');
				$k = array_rand($msg);
				$v = $msg[$k];
				$messages = [
					'type' => 'text',
					'text' => $v
				];	
				$match_count = $match_count+1;
			}
			if(preg_match('/‡∏à‡∏≤‡∏ß‡∏¥‡∏™/',$text) && preg_match('/‡∏™‡∏ß‡∏¢‡πÑ‡∏´‡∏°/',$text)){
				$msg = array('‡πÇ‡∏≠‡πâ‡∏¢‡∏´‡∏ô‡πâ‡∏≤‡∏¢‡∏±‡∏á‡∏Å‡∏∞‡∏Æ‡∏ß‡∏Å‡∏Å‡∏ö‡πÅ‡∏´‡∏°','‡πÇ‡∏≠‡∏¢‡∏´‡∏ô‡πâ‡∏≤‡∏Ñ‡∏∑‡∏≠‡∏à‡∏±‡∏á‡∏Ñ‡∏ô‡∏õ‡∏ß‡∏î‡∏Ç‡∏µ‡πâ‡∏ô‡∏¥‡πÅ‡∏°‡∏∞','‡∏Ç‡∏µ‡πâ‡∏£‡πâ‡∏≤‡∏¢‡πÜ‡∏≠‡∏¢‡πà‡∏≤‡∏°‡∏≤‡∏ñ‡∏≤‡∏°','‡πÄ‡∏Æ‡πá‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏Ñ‡∏∑‡∏≠‡∏Ç‡∏µ‡πâ‡∏Ñ‡∏≤‡∏î‡∏≤‡∏Å‡∏´‡∏ô‡∏¥');
				$k = array_rand($msg);
				$v = $msg[$k];
				$messages = [
					'type' => 'text',
					'text' => $v
				];	
				$match_count = $match_count+1;
			}


			if(preg_match('/‡∏à‡∏≤‡∏ß‡∏¥‡∏™/',$text) && preg_match('/‡∏Ç‡∏∏‡∏î‡πÑ‡∏£‡∏î‡∏µ/',$text)){
				
				$messages = [
					'type' => 'text',
					'text' => '‡πÄ‡∏Ç‡πâ‡∏≤ http://whattomine.com ‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏™‡πà‡πÅ‡∏£‡∏á‡∏Ç‡∏∏‡∏î‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏ô‡∏∞ ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏≤‡∏ñ‡∏≤‡∏°‡∏ú‡∏°'
				];	
				$match_count = $match_count+1;
			}

			if(preg_match('/‡∏à‡∏≤‡∏ß‡∏¥‡∏™ ‡πÅ‡∏£‡∏á‡∏Ç‡∏∏‡∏î/',$text)){
				$text_index = explode(' ', $text);
				$coins = callService('https://whattomine.com/coins.json',1);
				$type = $text_index[2];
				$hashrate = $text_index[3];
				$message = "";

				if($type=="" || $hashrate==""){
					exit;
				}

				$type = strtolower($type);

				$allowed_types = ['‡πÅ‡∏î‡∏á','‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß','‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ßlbc','sigt'];

				if(!in_array($type, $allowed_types)){
					exit;
				}

				foreach ($coins->coins as $key => $row) {

					if($type=="‡πÅ‡∏î‡∏á" && $row->algorithm!="Ethash"){
						continue;
					}
					if($type=="‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß" && $row->algorithm!="Equihash"){
						continue;
					}
					if($type=="‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ßlbc" && $row->algorithm!="LBRY"){
						continue;
					}
					if($type=="sigt" && $row->algorithm!="Skunkhash"){
						continue;
					}
					if($row->tag=="NICEHASH"){
						continue;
					}

					$multiply_hash = 1;
					if($row->algorithm=="Ethash" || $row->algorithm=="LBRY" || $row->algorithm=="Skunkhash"){
						$multiply_hash = 1000000;
					}

					$userRatio = $hashrate*$multiply_hash / $row->nethash;
					$blocksPerMin = 60.0 / $row->block_time;
					$coinPerMin = $blocksPerMin * $row->block_reward;

					$price = $row->exchange_rate*$bx_price->{1}->last_price;//btc

					$earnings_min = $userRatio * $coinPerMin;
					$earnings_hour = $earnings_min * 60;
					$earnings_day = $earnings_hour * 24;
					$earnings_week = $earnings_day * 7;
					$earnings_month = $earnings_day * 30;
					$earnings_year = $earnings_day * 365;

					$message .= $row->tag."
‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô = ".number_format($earnings_day*$price)." ‡∏ö‡∏≤‡∏ó
‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô = ".number_format($earnings_day,3)." ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç

";
				}

				$unit = "";

				if($type=="‡πÅ‡∏î‡∏á" || $type=="‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ßLBC"){
					$unit = " Mh/s";
				}
				if($type=="‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß"){
					$unit = " Sols/s";
				}


				$messages = [
					'type' => 'text',
					'text' => "‡πÅ‡∏£‡∏á‡∏Ç‡∏∏‡∏î ".$hashrate."".$unit." ‡πÑ‡∏î‡πâ

". $message
				];	
				$match_count = $match_count+1;
			}

			if(preg_match('/‡∏à‡∏≤‡∏ß‡∏¥‡∏™ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏Ñ‡∏≤/',$text) || preg_match('/‡∏à‡∏≤‡∏ß‡∏¥‡∏™ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ô/',$text)){
				$text_index = explode(' ', $text);
				if(isset($text_index[2]) && isset($text_index[3])){
					$amount = (float)$text_index[2];
					$coin_type = $text_index[3];

					if($coin_type=='eth' || $coin_type=="ETH"){
						$coin_type = 'ETH';
						$price = $bx_price->{21}->last_price;
					}
					if($coin_type=='btc' || $coin_type=="BTC"){
						$coin_type = 'BTC';
						$price = $bx_price->{1}->last_price;
					}
					if($coin_type=='etc' || $coin_type=="ETC"){
						$etc =callService('https://api.coinmarketcap.com/v1/ticker/ethereum-classic/?convert=THB',1);
						$coin_type = 'ETC';
						$price = $etc[0]->price_thb;
					}
					if($coin_type=='zec' || $coin_type=="ZEC"){
						$zec =callService('https://api.coinmarketcap.com/v1/ticker/zcash/?convert=THB',1);
						$coin_type = 'ZEC';
						$price = $zec[0]->price_thb;
					}
					if($coin_type=='xrp' || $coin_type=="XRP"){
						$coin_type = 'XRP';
						$price = $bx_price->{25}->last_price;
					}
					if($coin_type=='omg' || $coin_type=="OMG"){
						$coin_type = 'OMG';
						$price = $bx_price->{26}->last_price;
					}
					if($coin_type=='sigt' || $coin_type=="SIGT"){
						$sigt =callService('https://www.cryptopia.co.nz/api/GetMarket/SIGT_BTC',1);
						$coin_type = 'SIGT';
						$price = $sigt->Data->LastPrice*$bx_price->{1}->last_price;
					}

					$messages = [
						'type' => 'text',
						'text' => $amount.' '.$coin_type.' =  '.number_format($amount * $price,2).' ‡∏ö‡∏≤‡∏ó ‡πÄ‡∏î‡πâ‡∏≠‡∏•‡∏π‡∏Å‡∏û‡∏µ‡πà'
					];	
					$match_count = $match_count+1;
				}
			}

			if(preg_match('/‡∏à‡∏≤‡∏ß‡∏¥‡∏™ top coin/',$text)){
				$topcoins=callService('https://api.coinmarketcap.com/v1/ticker/?limit=10',1);

				$txt = "";
				$i=1;
				foreach($topcoins as $index => $row){
					$txt .= $i.'. '.$row->name." (".$row->symbol.") \nPrice: $".number_format($row->price_usd,2)." USD\n\n";
					$i++;
				}
				
				$messages = [
					'type' => 'text',
					'text' => $txt
				];	
				$match_count = $match_count+1;
			}

			if($text=="‡∏à‡∏≤‡∏ß‡∏¥‡∏™ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏£‡∏≤‡∏Ñ‡∏≤" || preg_match('/‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏£‡∏≤‡∏Ñ‡∏≤/',$text)){
				$etc =callService('https://api.coinmarketcap.com/v1/ticker/ethereum-classic/?convert=THB',1);
				$zec =callService('https://api.coinmarketcap.com/v1/ticker/zcash/?convert=THB',1);
				$ltc =callService('https://api.coinmarketcap.com/v1/ticker/litecoin/?convert=THB',1);
				$sigt =callService('https://www.cryptopia.co.nz/api/GetMarket/SIGT_BTC',1);
				$messages = [
			'type' => 'text',
			'text' => 'BTC - Bitcoin
'.number_format($bx_price->{1}->last_price,2).' ‡∏ö‡∏≤‡∏ó ('.fillPlus($bx_price->{1}->change).'%)

ETH - Ethereum
'.number_format($bx_price->{21}->last_price,2).' ‡∏ö‡∏≤‡∏ó ('.fillPlus($bx_price->{21}->change).'%)

ETC - Ethereum Classic
'.number_format($etc[0]->price_thb,2).' ‡∏ö‡∏≤‡∏ó ('.fillPlus($etc[0]->percent_change_24h).'%)

ZEC - Zcash
'.number_format($zec[0]->price_thb,2).' ‡∏ö‡∏≤‡∏ó ('.fillPlus($zec[0]->percent_change_24h).'%)

OMG - Omise GO
'.number_format($bx_price->{26}->last_price,2).' ‡∏ö‡∏≤‡∏ó ('.fillPlus($bx_price->{26}->change).'%)

XRP - Ripple
'.number_format($bx_price->{25}->last_price,2).' ‡∏ö‡∏≤‡∏ó ('.fillPlus($bx_price->{25}->change).'%)

DAS - Dash
'.number_format($bx_price->{22}->last_price,2).' ‡∏ö‡∏≤‡∏ó ('.fillPlus($bx_price->{22}->change).'%)

LTC - Litecoin
'.number_format($ltc[0]->price_thb,2).' ‡∏ö‡∏≤‡∏ó ('.fillPlus($ltc[0]->percent_change_24h).'%)

SIGT - Signatum
'.number_format($sigt->Data->LastPrice*$bx_price->{1}->last_price,2).' ‡∏ö‡∏≤‡∏ó ('.fillPlus($sigt->Data->Change).'%)
'
		];
				$match_count = $match_count+1;
			}

			if($text=="‡∏à‡∏≤‡∏ß‡∏¥‡∏™"){
				$msg = array('‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏´‡∏≤‡∏ã‡∏¥‡πÅ‡∏ï‡∏Å‡∏ö‡πà‡∏Ñ‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏û‡∏µ‡πà','‡∏Ñ‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏û‡∏µ‡πà','‡∏Æ‡πâ‡∏ß‡∏¢‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÄ‡∏Æ‡πá‡∏î‡∏´‡∏¢‡∏±‡∏á');
				$k = array_rand($msg);
				$v = $msg[$k];
				$messages = [
					'type' => 'text',
					'text' => $v
				];	
				$match_count = $match_count+1;
			}
			if($text=="‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πà‡∏≤‡∏ß"){
				$feed =callService('https://siamblockchain.com/feed/',1,'xml');
				$text = '';
				$i=1;
				foreach($feed->channel->item as $row){

					if($i>5){
						break;
					}
					$short_url = postJson('https://www.googleapis.com/urlshortener/v1/url?key=AIzaSyDojB8lNm0KJgBVD_tE_H4BTM3AbhvTFnQ',[
						'longUrl'=>$row->link
					]);
					$text .= $row->title.'
'.date('d/m/y',strtotime($row->pubDate)).'
'.$short_url->id.'

';
					$i++;
				}

				$messages = [
					'type' => 'text',
					'text' => $text
				];	
				$match_count = $match_count+1;
			}
			if(preg_match('/‡∏ô‡∏≠‡∏ô/',$text)){
				$msg = array('‡∏´‡∏•‡∏±‡∏ö‡∏ù‡∏±‡∏ô‡∏î‡∏µ‡πÄ‡∏î‡πâ‡∏≠‡∏Ñ‡∏±‡∏ö','‡∏ù‡∏±‡∏ô‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏û‡∏µ‡πà','‡∏´‡∏•‡∏±‡∏ö‡∏ù‡∏±‡∏ô‡∏î‡∏µ‡∏ï‡∏µ‡∏Å‡∏∞‡∏´‡∏£‡∏µ‡πà‡∏ó‡∏±‡πâ‡∏á‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡∏£‡∏±‡∏ö');
				$k = array_rand($msg);
				$v = $msg[$k];
				$messages = [
					'type' => 'text',
					'text' => $v
				];	
				$match_count = $match_count+1;
			}
			if($text=="‡πÇ‡∏ï‡πÇ‡∏ï‡πâ"){
				$msg = array('‡∏Å‡∏≤‡∏Å‡∏°‡∏≤‡∏Å‡∏Ñ‡∏ô‡∏ô‡∏µ‡πâ','‡∏Å‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÅ‡∏•‡πâ‡∏ß','‡∏Å‡∏≤‡∏Å‡∏ö‡∏±‡∏Å‡∏Ñ‡∏±‡∏Å‡∏´‡∏°‡∏≠‡∏ô‡∏µ‡πà');
				$k = array_rand($msg);
				$v = $msg[$k];
				$messages = [
					'type' => 'text',
					'text' => $v
				];	
				$match_count = $match_count+1;
			}
			if($text=="‡πÉ‡∏Ñ‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏à‡∏≤‡∏ß‡∏¥‡∏™"){
				$msg = array('‡∏•‡∏π‡∏Å‡∏û‡∏µ‡πà‡∏≠‡∏≤‡∏ó‡πÑ‡∏á‡∏Ñ‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏û‡∏µ‡πà‡∏ú‡∏°‡πÄ‡∏≠‡∏á‡πÄ‡∏ó‡∏û‡∏Ñ‡∏±‡∏Å‡∏Ñ‡∏ô‡∏ô‡∏µ‡πâ ‡πÉ‡∏Ñ‡∏£‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏™‡πà‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÑ‡∏£‡πÉ‡∏´‡πâ‡∏ú‡∏° ‡∏•‡∏π‡∏Å‡∏û‡∏µ‡πà‡∏ö‡∏≠‡∏Å‡∏Ç‡∏≠ 3 ‡∏Ç‡∏ß‡∏î‡∏û‡∏≠ 555');
				$k = array_rand($msg);
				$v = $msg[$k];
				$messages = [
					'type' => 'text',
					'text' => $v
				];	
				$match_count = $match_count+1;
			}
			if($text=="‡πÄ‡∏î‡∏ü"){
				$msg = array('‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡∏£‡∏±‡∏Å‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡πÉ‡∏à‡πÄ‡∏î‡∏µ‡∏¢‡∏ß','‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á‡∏ï‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å','‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡πÑ‡∏°‡πà‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏π‡πâ','‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡∏£‡∏±‡∏Å‡∏à‡∏£‡∏¥‡∏á ‡πÅ‡∏ï‡πà‡∏ï‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ');
				$k = array_rand($msg);
				$v = $msg[$k];
				$messages = [
					'type' => 'text',
					'text' => $v
				];	
				$match_count = $match_count+1;
			}

			if (preg_match('/‡∏à‡∏≤‡∏ß‡∏¥‡∏™/',$text) && $match_count==0){
				$msg = array('‡∏à‡∏±‡∏Å‡∏ô‡∏≥‡πÄ‡∏î‡πâ‡∏≠‡∏Ñ‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏û‡∏µ‡πà','‡∏à‡∏±‡∏Å‡πÄ‡∏ß‡πà‡∏≤‡∏û‡∏¥‡∏™‡∏±‡∏á‡∏î‡∏≠‡∏Å','‡∏ä‡πà‡∏ß‡∏¢‡∏û‡∏π‡∏î‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏´‡∏ô‡πà‡∏≠‡∏¢','‡πÇ‡∏≠‡πâ‡∏¢ ‡∏ñ‡∏≤‡∏°‡∏û‡∏¥‡∏™‡∏±‡∏á‡∏ô‡πâ‡∏≠');
				$k = array_rand($msg);
				$v = $msg[$k];
				$messages = [
					'type' => 'text',
					'text' => $v
				];	
				$match_count = $match_count+1;
			}

			if($match_count>0){
				replyMessage($replyToken,$messages);
			}
		}
	}
}
echo "OK";